name: Deploy to Schema CDN service # (updates the S3 Bucket and clears cache of CloudFront distribution)

on:
  push:
    branches:
      - main
    paths:
      - "schemas/**/schema.json"
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GITHUB_ACTION
          role-session-name: githubactions
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync Files to S3
        run: |
          # Create a temporary directory for transformed files
          mkdir -p transformed

          # Create 404.txt file in the root of transformed directory
          echo "Not Found" > transformed/404.txt
          
          # Find all schema.json files and create transformed copies
          find schemas -name schema.json | while read file; do
            # Extract components from path (e.g., schemas/Forestry/v0.0.1/schema.json)
            domain=$(echo "$file" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
            version=$(echo "$file" | cut -d'/' -f3)
            
            # TODO: replace this with a proper fix
            if [ "$domain" = "forestrysource" ]; then
              domain="forestry-source"
            fi

            # Create new path with transformed structure
            new_path="transformed/${domain}-schemas/${version}/schema.json"
            
            # Create directory structure and copy file
            mkdir -p "$(dirname "$new_path")"
            cp "$file" "$new_path"
          done
          
          # Sync transformed directory to S3
          aws s3 sync transformed/ s3://schema-cdn-service-bucket \
            --delete

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
